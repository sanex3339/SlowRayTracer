var Tracer=function(){function e(e,t,r){this.currentX=0,this.currentY=0,this.emptyWorkers=[],this.numberOfWorkers=1,this.pixelsArray=[],this.screenWidth=250,this.screenHeight=250,this.ctx=e,this.screenWidth=t,this.screenHeight=r,this.screenWidth<this.numberOfWorkers&&(this.numberOfWorkers=this.screenWidth-2),this.image=e.getImageData(0,0,this.screenWidth,this.screenHeight),this.imageData=this.image.data;for(var i=0;i<this.numberOfWorkers;i++)this.emptyWorkers.push(new Worker("TracerWorker.js"));for(var s=0;s<this.screenHeight;s++)for(var a=0;a<this.screenWidth;a++)this.pixelsArray.push({x:a,y:s})}return e.prototype.createWorker=function(e,t,r){var i=this;e.onmessage=function(t){var r=t.data;return"string"==typeof r&&(r=JSON.parse(r)),i.imageData[r[1]*i.screenWidth*4+4*r[0]]=r[2],i.imageData[r[1]*i.screenWidth*4+(4*r[0]+1)]=r[3],i.imageData[r[1]*i.screenWidth*4+(4*r[0]+2)]=r[4],i.imageData[r[1]*i.screenWidth*4+(4*r[0]+3)]=255,i.emptyWorkers.push(e),0===i.pixelsArray.length&&i.emptyWorkers.length===i.numberOfWorkers?i.doneCallback():void(0!==i.pixelsArray.length&&i.pixelManager())},e.postMessage([this.screenWidth,this.screenHeight,t,r])},e.prototype.pixelManager=function(e){var t,r;e&&(this.doneCallback=e);for(var i=0,s=this.emptyWorkers.length;s>i;i++)t=this.emptyWorkers.shift(),r=this.pixelsArray.shift(),this.createWorker(t,r.x,r.y),r.x===this.screenWidth-1&&(this.image.data=this.imageData,this.ctx.putImageData(this.image,0,0))},e.prototype.run=function(){var e=this;this.startTime=new Date,this.pixelManager(function(){e.image.data=e.imageData,e.ctx.putImageData(e.image,0,0),e.endTime=new Date,console.log((e.endTime-e.startTime)/1e3+" секунд")})},e}();exports.Tracer=Tracer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRyYWNlci50cyJdLCJuYW1lcyI6WyJUcmFjZXIiLCJUcmFjZXIuY29uc3RydWN0b3IiLCJUcmFjZXIuY3JlYXRlV29ya2VyIiwiVHJhY2VyLnBpeGVsTWFuYWdlciIsIlRyYWNlci5ydW4iLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFBQSxRQUFBLFdBZUlBLFFBQUFBLEdBQWFBLEVBQStCQSxFQUFzQkEsR0FibEVDLEtBQUFBLFNBQW1CQSxFQUNuQkEsS0FBQUEsU0FBbUJBLEVBQ25CQSxLQUFBQSxnQkFJQUEsS0FBQUEsZ0JBQWtCQSxFQUNsQkEsS0FBQUEsZUFDQUEsS0FBQUEsWUFBc0JBLElBQ3RCQSxLQUFBQSxhQUF1QkEsSUFLbkJBLEtBQUtBLElBQU1BLEVBQ1hBLEtBQUtBLFlBQWNBLEVBQ25CQSxLQUFLQSxhQUFlQSxFQUVoQkEsS0FBS0EsWUFBY0EsS0FBS0Esa0JBQ3hCQSxLQUFLQSxnQkFBa0JBLEtBQUtBLFlBQWNBLEdBRzlDQSxLQUFLQSxNQUFRQSxFQUFJQSxhQUFhQSxFQUFHQSxFQUFHQSxLQUFLQSxZQUFhQSxLQUFLQSxjQUMzREEsS0FBS0EsVUFBWUEsS0FBS0EsTUFBWUEsSUFFbENBLEtBQUtBLEdBQUlBLEdBQUlBLEVBQUdBLEVBQUlBLEtBQUtBLGdCQUFpQkEsSUFDdENBLEtBQUtBLGFBQWFBLEtBQUtBLEdBQUlBLFFBQU9BLG1CQUd0Q0EsS0FBS0EsR0FBSUEsR0FBSUEsRUFBR0EsRUFBSUEsS0FBS0EsYUFBY0EsSUFDbkNBLElBQUtBLEdBQUlBLEdBQUlBLEVBQUdBLEVBQUlBLEtBQUtBLFlBQWFBLElBQ2xDQSxLQUFLQSxZQUFZQSxNQUNiQSxFQUFBQSxFQUNBQSxFQUFBQSxJQW1FcEJELE1BN0RZQSxHQUFBQSxVQUFBQSxhQUFSQSxTQUFzQkEsRUFBUUEsRUFBR0EsR0FBakNFLEdBQUFBLEdBQUFBLElBQ0lBLEdBQU9BLFVBQVlBLFNBQUNBLEdBQ2hCQSxHQUFJQSxHQUFPQSxFQUFRQSxJQWFuQkEsT0FYb0JBLGdCQUFYQSxLQUNMQSxFQUFPQSxLQUFLQSxNQUFNQSxJQUd0QkEsRUFBS0EsVUFBV0EsRUFBS0EsR0FBS0EsRUFBS0EsWUFBY0EsRUFBZ0JBLEVBQVZBLEVBQUtBLElBQVdBLEVBQUtBLEdBQ3hFQSxFQUFLQSxVQUFXQSxFQUFLQSxHQUFLQSxFQUFLQSxZQUFjQSxHQUFnQkEsRUFBVkEsRUFBS0EsR0FBU0EsSUFBTUEsRUFBS0EsR0FDNUVBLEVBQUtBLFVBQVdBLEVBQUtBLEdBQUtBLEVBQUtBLFlBQWNBLEdBQWdCQSxFQUFWQSxFQUFLQSxHQUFTQSxJQUFNQSxFQUFLQSxHQUM1RUEsRUFBS0EsVUFBV0EsRUFBS0EsR0FBS0EsRUFBS0EsWUFBY0EsR0FBZ0JBLEVBQVZBLEVBQUtBLEdBQVNBLElBQU1BLElBRXZFQSxFQUFLQSxhQUFhQSxLQUFLQSxHQUVTQSxJQUE1QkEsRUFBS0EsWUFBWUEsUUFBZ0JBLEVBQUtBLGFBQWFBLFNBQVdBLEVBQUtBLGdCQUM1REEsRUFBS0Esb0JBR2dCQSxJQUE1QkEsRUFBS0EsWUFBWUEsUUFDakJBLEVBQUtBLGlCQUliQSxFQUFPQSxhQUFhQSxLQUFLQSxZQUFhQSxLQUFLQSxhQUFjQSxFQUFHQSxLQUd4REYsRUFBQUEsVUFBQUEsYUFBUkEsU0FBc0JBLEdBQ2xCRyxHQUFJQSxHQUNBQSxDQUVBQSxLQUNBQSxLQUFLQSxhQUFlQSxFQUd4QkEsS0FBS0EsR0FBSUEsR0FBSUEsRUFBR0EsRUFBcUJBLEtBQUtBLGFBQWFBLE9BQVlBLEVBQUpBLEVBQXdCQSxJQUNuRkEsRUFBZUEsS0FBS0EsYUFBYUEsUUFDakNBLEVBQVNBLEtBQUtBLFlBQVlBLFFBSTFCQSxLQUFLQSxhQUFhQSxFQUFjQSxFQUFVQSxFQUFHQSxFQUFVQSxHQUVuREEsRUFBVUEsSUFBTUEsS0FBS0EsWUFBY0EsSUFDbkNBLEtBQUtBLE1BQVlBLEtBQUlBLEtBQUtBLFVBQzFCQSxLQUFLQSxJQUFJQSxhQUFhQSxLQUFLQSxNQUFPQSxFQUFHQSxLQUsxQ0gsRUFBQUEsVUFBQUEsSUFBUEEsV0FBQUksR0FBQUEsR0FBQUEsSUFDSUEsTUFBS0EsVUFBWUEsR0FBSUEsTUFFckJBLEtBQUtBLGFBQWFBLFdBQ2RBLEVBQUtBLE1BQVlBLEtBQUlBLEVBQUtBLFVBQzFCQSxFQUFLQSxJQUFJQSxhQUFhQSxFQUFLQSxNQUFPQSxFQUFHQSxHQUVyQ0EsRUFBS0EsUUFBVUEsR0FBSUEsTUFDbkJBLFFBQVFBLEtBQVFBLEVBQUtBLFFBQVVBLEVBQUtBLFdBQWFBLElBQUlBLGNBR2pFSixJQXRHYUssU0FBQUwsT0FBTUEiLCJmaWxlIjoiVHJhY2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFRyYWNlciB7XG4gICAgY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7XG4gICAgY3VycmVudFg6IG51bWJlciA9IDA7XG4gICAgY3VycmVudFk6IG51bWJlciA9IDA7XG4gICAgZW1wdHlXb3JrZXJzID0gW107XG4gICAgZG9uZUNhbGxiYWNrOiAoKSA9PiB2b2lkO1xuICAgIGltYWdlOiBhbnk7XG4gICAgaW1hZ2VEYXRhOiBudW1iZXJbXTtcbiAgICBudW1iZXJPZldvcmtlcnMgPSAxO1xuICAgIHBpeGVsc0FycmF5OiBhbnlbXSA9IFtdO1xuICAgIHNjcmVlbldpZHRoOiBudW1iZXIgPSAyNTA7XG4gICAgc2NyZWVuSGVpZ2h0OiBudW1iZXIgPSAyNTA7XG4gICAgc3RhcnRUaW1lOiBhbnk7XG4gICAgZW5kVGltZTogYW55O1xuXG4gICAgY29uc3RydWN0b3IgKGN0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJELCBzY3JlZW5XaWR0aD86IG51bWJlciwgc2NyZWVuSGVpZ2h0PzogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuY3R4ID0gY3R4O1xuICAgICAgICB0aGlzLnNjcmVlbldpZHRoID0gc2NyZWVuV2lkdGg7XG4gICAgICAgIHRoaXMuc2NyZWVuSGVpZ2h0ID0gc2NyZWVuSGVpZ2h0O1xuXG4gICAgICAgIGlmICh0aGlzLnNjcmVlbldpZHRoIDwgdGhpcy5udW1iZXJPZldvcmtlcnMpIHtcbiAgICAgICAgICAgIHRoaXMubnVtYmVyT2ZXb3JrZXJzID0gdGhpcy5zY3JlZW5XaWR0aCAtIDI7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmltYWdlID0gY3R4LmdldEltYWdlRGF0YSgwLCAwLCB0aGlzLnNjcmVlbldpZHRoLCB0aGlzLnNjcmVlbkhlaWdodCk7XG4gICAgICAgIHRoaXMuaW1hZ2VEYXRhID0gdGhpcy5pbWFnZVsnZGF0YSddO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5udW1iZXJPZldvcmtlcnM7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5lbXB0eVdvcmtlcnMucHVzaChuZXcgV29ya2VyKCdUcmFjZXJXb3JrZXIuanMnKSk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGxldCB5ID0gMDsgeSA8IHRoaXMuc2NyZWVuSGVpZ2h0OyB5KyspIHtcbiAgICAgICAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgdGhpcy5zY3JlZW5XaWR0aDsgeCsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5waXhlbHNBcnJheS5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgeCxcbiAgICAgICAgICAgICAgICAgICAgeVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjcmVhdGVXb3JrZXIgKHdvcmtlciwgeCwgeSkge1xuICAgICAgICB3b3JrZXIub25tZXNzYWdlID0gKG1lc3NhZ2UpID0+IHtcbiAgICAgICAgICAgIGxldCBkYXRhID0gbWVzc2FnZS5kYXRhO1xuXG4gICAgICAgICAgICBpZih0eXBlb2YoZGF0YSkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuaW1hZ2VEYXRhWyhkYXRhWzFdICogdGhpcy5zY3JlZW5XaWR0aCAqIDQpICsgKGRhdGFbMF0gKiA0KV0gPSBkYXRhWzJdO1xuICAgICAgICAgICAgdGhpcy5pbWFnZURhdGFbKGRhdGFbMV0gKiB0aGlzLnNjcmVlbldpZHRoICogNCkgKyAoZGF0YVswXSAqIDQgKyAxKV0gPSBkYXRhWzNdO1xuICAgICAgICAgICAgdGhpcy5pbWFnZURhdGFbKGRhdGFbMV0gKiB0aGlzLnNjcmVlbldpZHRoICogNCkgKyAoZGF0YVswXSAqIDQgKyAyKV0gPSBkYXRhWzRdO1xuICAgICAgICAgICAgdGhpcy5pbWFnZURhdGFbKGRhdGFbMV0gKiB0aGlzLnNjcmVlbldpZHRoICogNCkgKyAoZGF0YVswXSAqIDQgKyAzKV0gPSAyNTU7XG5cbiAgICAgICAgICAgIHRoaXMuZW1wdHlXb3JrZXJzLnB1c2god29ya2VyKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMucGl4ZWxzQXJyYXkubGVuZ3RoID09PSAwICYmIHRoaXMuZW1wdHlXb3JrZXJzLmxlbmd0aCA9PT0gdGhpcy5udW1iZXJPZldvcmtlcnMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kb25lQ2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMucGl4ZWxzQXJyYXkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5waXhlbE1hbmFnZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICB3b3JrZXIucG9zdE1lc3NhZ2UoW3RoaXMuc2NyZWVuV2lkdGgsIHRoaXMuc2NyZWVuSGVpZ2h0LCB4LCB5XSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwaXhlbE1hbmFnZXIgKGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgICAgICBsZXQgYWN0aXZlV29ya2VyLFxuICAgICAgICAgICAgcGl4ZWxzOiBhbnlbXTtcblxuICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRoaXMuZG9uZUNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGxldCB3ID0gMCwgZW1wdHlXb3JrZXJzTGVuZ3RoID0gdGhpcy5lbXB0eVdvcmtlcnMubGVuZ3RoOyB3IDwgZW1wdHlXb3JrZXJzTGVuZ3RoOyB3KyspIHtcbiAgICAgICAgICAgIGFjdGl2ZVdvcmtlciA9IHRoaXMuZW1wdHlXb3JrZXJzLnNoaWZ0KCk7XG4gICAgICAgICAgICBwaXhlbHMgPSB0aGlzLnBpeGVsc0FycmF5LnNoaWZ0KCk7XG5cbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHBpeGVsc1sneSddLCBwaXhlbHNbJ3gnXSk7XG5cbiAgICAgICAgICAgIHRoaXMuY3JlYXRlV29ya2VyKGFjdGl2ZVdvcmtlciwgcGl4ZWxzWyd4J10sIHBpeGVsc1sneSddKTtcblxuICAgICAgICAgICAgaWYgKHBpeGVsc1sneCddID09PSB0aGlzLnNjcmVlbldpZHRoIC0gMSkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VbJ2RhdGEnXSA9IHRoaXMuaW1hZ2VEYXRhO1xuICAgICAgICAgICAgICAgIHRoaXMuY3R4LnB1dEltYWdlRGF0YSh0aGlzLmltYWdlLCAwLCAwKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHJ1biAoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3RhcnRUaW1lID0gbmV3IERhdGUoKTtcblxuICAgICAgICB0aGlzLnBpeGVsTWFuYWdlcigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmltYWdlWydkYXRhJ10gPSB0aGlzLmltYWdlRGF0YTtcbiAgICAgICAgICAgIHRoaXMuY3R4LnB1dEltYWdlRGF0YSh0aGlzLmltYWdlLCAwLCAwKTtcblxuICAgICAgICAgICAgdGhpcy5lbmRUaW1lID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGAkeyh0aGlzLmVuZFRpbWUgLSB0aGlzLnN0YXJ0VGltZSkgLyAxMDAwfSDRgdC10LrRg9C90LRgKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
