var __extends=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},AbstractObject_1=require("./AbstractObject"),Color_1=require("../Color/Color"),Material_1=require("../Material"),RGBColor_1=require("../Color/RGBColor"),Vector_1=require("../Vector"),Plane=function(t){function e(e,r){void 0===r&&(r=0),t.call(this),this.material=new Material_1.Material(new Color_1.Color(new RGBColor_1.RGBColor(115,115,115)),0),this.type="surface",this.offset=r,this.normal=e}return __extends(e,t),e.prototype.getIntersectData=function(t){var e,r,o,i;return r=-Vector_1.Vector.dot(this.getNormal(),t.getOrigin())+this.offset,o=Vector_1.Vector.dot(this.getNormal(),t.getDirection()),o>0?void 0:(i=r/o,t.setDistance(i),e=t.getHitPoint(),{point:e,distance:i})},e.prototype.getMaterial=function(){return this.material},e.prototype.getNormal=function(){return this.normal},e.prototype.getType=function(){return this.type},e.prototype.setMaterial=function(t){return this.material=t,this},e}(AbstractObject_1.AbstractObject);exports.Plane=Plane;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk9iamVjdHMvUGxhbmUuanMiLCJPYmplY3RzL1BsYW5lLnRzIl0sIm5hbWVzIjpbIl9fZXh0ZW5kcyIsInRoaXMiLCJkIiwiYiIsIl9fIiwiY29uc3RydWN0b3IiLCJwIiwiaGFzT3duUHJvcGVydHkiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJBYnN0cmFjdE9iamVjdF8xIiwicmVxdWlyZSIsIkNvbG9yXzEiLCJNYXRlcmlhbF8xIiwiUkdCQ29sb3JfMSIsIlZlY3Rvcl8xIiwiUGxhbmUiLCJfc3VwZXIiLCJQbGFuZS5jb25zdHJ1Y3RvciIsIlBsYW5lLmdldEludGVyc2VjdERhdGEiLCJQbGFuZS5nZXRNYXRlcmlhbCIsIlBsYW5lLmdldE5vcm1hbCIsIlBsYW5lLmdldFR5cGUiLCJQbGFuZS5zZXRNYXRlcmlhbCIsIkFic3RyYWN0T2JqZWN0IiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsR0FBSUEsV0FBYUMsTUFBUUEsS0FBS0QsV0FBYyxTQUFVRSxFQUFHQyxHQUVyRCxRQUFTQyxLQUFPSCxLQUFLSSxZQUFjSCxFQURuQyxJQUFLLEdBQUlJLEtBQUtILEdBQU9BLEVBQUVJLGVBQWVELEtBQUlKLEVBQUVJLEdBQUtILEVBQUVHLEdBRW5ESixHQUFFTSxVQUFrQixPQUFOTCxFQUFhTSxPQUFPQyxPQUFPUCxJQUFNQyxFQUFHSSxVQUFZTCxFQUFFSyxVQUFXLEdBQUlKLEtDSG5GTyxpQkFBQUMsUUFBK0Isb0JBQy9CQyxRQUFBRCxRQUFzQixrQkFDdEJFLFdBQUFGLFFBQXlCLGVBRXpCRyxXQUFBSCxRQUF5QixxQkFDekJJLFNBQUFKLFFBQXVCLGFBRXZCSyxNQUFBLFNBQUFDLEdBTUlELFFBQUFBLEdBQWFBLEVBQWdCQSxHQUFBRSxTQUFBQSxJQUFBQSxFQUFBQSxHQUN6QkEsRUFBQUEsS0FBQUEsTUFKSUEsS0FBQUEsU0FBcUJBLEdBQUlBLFlBQUFBLFNBQVNBLEdBQUlBLFNBQUFBLE1BQU1BLEdBQUlBLFlBQUFBLFNBQVNBLElBQUtBLElBQUtBLE1BQU9BLEdBQzFFQSxLQUFBQSxLQUFlQSxVQUtuQkEsS0FBS0EsT0FBU0EsRUFDZEEsS0FBS0EsT0FBU0EsRUE0Q3RCRixNQXREMkJBLFdBQUFBLEVBQUFBLEdBYWhCQSxFQUFBQSxVQUFBQSxpQkFBUEEsU0FBeUJBLEdBQ3JCRyxHQUFJQSxHQUNBQSxFQUNBQSxFQUNBQSxDQUtKQSxPQUhBQSxJQUFjQSxTQUFBQSxPQUFPQSxJQUFJQSxLQUFLQSxZQUFhQSxFQUFJQSxhQUFlQSxLQUFLQSxPQUNuRUEsRUFBY0EsU0FBQUEsT0FBT0EsSUFBSUEsS0FBS0EsWUFBYUEsRUFBSUEsZ0JBRTNDQSxFQUFjQSxFQUFsQkEsUUFJQUEsRUFBV0EsRUFBWUEsRUFFdkJBLEVBQUlBLFlBQVlBLEdBQ2hCQSxFQUFXQSxFQUFJQSxlQUdYQSxNQUFPQSxFQUNQQSxTQUFBQSxLQUlESCxFQUFBQSxVQUFBQSxZQUFQQSxXQUNJSSxNQUFPQSxNQUFLQSxVQUdUSixFQUFBQSxVQUFBQSxVQUFQQSxXQUNJSyxNQUFPQSxNQUFLQSxRQUdUTCxFQUFBQSxVQUFBQSxRQUFQQSxXQUNJTSxNQUFPQSxNQUFLQSxNQUdUTixFQUFBQSxVQUFBQSxZQUFQQSxTQUFvQkEsR0FHaEJPLE1BRkFBLE1BQUtBLFNBQVdBLEVBRVRBLE1BRWZQLEdBdEQyQk4saUJBQUFjLGVBQWRDLFNBQUFULE1BQUtBIiwiZmlsZSI6Ik9iamVjdHMvUGxhbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07XG4gICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xufTtcbnZhciBBYnN0cmFjdE9iamVjdF8xID0gcmVxdWlyZShcIi4vQWJzdHJhY3RPYmplY3RcIik7XG52YXIgQ29sb3JfMSA9IHJlcXVpcmUoXCIuLi9Db2xvci9Db2xvclwiKTtcbnZhciBNYXRlcmlhbF8xID0gcmVxdWlyZShcIi4uL01hdGVyaWFsXCIpO1xudmFyIFJHQkNvbG9yXzEgPSByZXF1aXJlKFwiLi4vQ29sb3IvUkdCQ29sb3JcIik7XG52YXIgVmVjdG9yXzEgPSByZXF1aXJlKFwiLi4vVmVjdG9yXCIpO1xudmFyIFBsYW5lID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUGxhbmUsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUGxhbmUobm9ybWFsLCBvZmZzZXQpIHtcbiAgICAgICAgaWYgKG9mZnNldCA9PT0gdm9pZCAwKSB7IG9mZnNldCA9IDA7IH1cbiAgICAgICAgX3N1cGVyLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMubWF0ZXJpYWwgPSBuZXcgTWF0ZXJpYWxfMS5NYXRlcmlhbChuZXcgQ29sb3JfMS5Db2xvcihuZXcgUkdCQ29sb3JfMS5SR0JDb2xvcigxMTUsIDExNSwgMTE1KSksIDApO1xuICAgICAgICB0aGlzLnR5cGUgPSAnc3VyZmFjZSc7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0O1xuICAgICAgICB0aGlzLm5vcm1hbCA9IG5vcm1hbDtcbiAgICB9XG4gICAgUGxhbmUucHJvdG90eXBlLmdldEludGVyc2VjdERhdGEgPSBmdW5jdGlvbiAocmF5KSB7XG4gICAgICAgIHZhciBoaXRQb2ludCwgbnVtZXJhdG9yLCBkZW5vbWluYXRvciwgZGlzdGFuY2U7XG4gICAgICAgIG51bWVyYXRvciA9IC1WZWN0b3JfMS5WZWN0b3IuZG90KHRoaXMuZ2V0Tm9ybWFsKCksIHJheS5nZXRPcmlnaW4oKSkgKyB0aGlzLm9mZnNldDtcbiAgICAgICAgZGVub21pbmF0b3IgPSBWZWN0b3JfMS5WZWN0b3IuZG90KHRoaXMuZ2V0Tm9ybWFsKCksIHJheS5nZXREaXJlY3Rpb24oKSk7XG4gICAgICAgIGlmIChkZW5vbWluYXRvciA+IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBkaXN0YW5jZSA9IG51bWVyYXRvciAvIGRlbm9taW5hdG9yO1xuICAgICAgICByYXkuc2V0RGlzdGFuY2UoZGlzdGFuY2UpO1xuICAgICAgICBoaXRQb2ludCA9IHJheS5nZXRIaXRQb2ludCgpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcG9pbnQ6IGhpdFBvaW50LFxuICAgICAgICAgICAgZGlzdGFuY2U6IGRpc3RhbmNlXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBQbGFuZS5wcm90b3R5cGUuZ2V0TWF0ZXJpYWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hdGVyaWFsO1xuICAgIH07XG4gICAgUGxhbmUucHJvdG90eXBlLmdldE5vcm1hbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubm9ybWFsO1xuICAgIH07XG4gICAgUGxhbmUucHJvdG90eXBlLmdldFR5cGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnR5cGU7XG4gICAgfTtcbiAgICBQbGFuZS5wcm90b3R5cGUuc2V0TWF0ZXJpYWwgPSBmdW5jdGlvbiAobWF0ZXJpYWwpIHtcbiAgICAgICAgdGhpcy5tYXRlcmlhbCA9IG1hdGVyaWFsO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIHJldHVybiBQbGFuZTtcbn0pKEFic3RyYWN0T2JqZWN0XzEuQWJzdHJhY3RPYmplY3QpO1xuZXhwb3J0cy5QbGFuZSA9IFBsYW5lO1xuIiwiaW1wb3J0IHsgQWJzdHJhY3RPYmplY3QgfSBmcm9tIFwiLi9BYnN0cmFjdE9iamVjdFwiO1xuaW1wb3J0IHsgQ29sb3IgfSBmcm9tIFwiLi4vQ29sb3IvQ29sb3JcIjtcbmltcG9ydCB7IE1hdGVyaWFsIH0gZnJvbSBcIi4uL01hdGVyaWFsXCI7XG5pbXBvcnQgeyBSYXkgfSBmcm9tIFwiLi4vUmF5XCI7XG5pbXBvcnQgeyBSR0JDb2xvciB9IGZyb20gXCIuLi9Db2xvci9SR0JDb2xvclwiO1xuaW1wb3J0IHsgVmVjdG9yIH0gZnJvbSBcIi4uL1ZlY3RvclwiO1xuXG5leHBvcnQgY2xhc3MgUGxhbmUgZXh0ZW5kcyBBYnN0cmFjdE9iamVjdCB7XG4gICAgcHJpdmF0ZSBub3JtYWw6IFZlY3RvcjtcbiAgICBwcml2YXRlIG9mZnNldDogbnVtYmVyO1xuICAgIHByaXZhdGUgbWF0ZXJpYWw6IE1hdGVyaWFsID0gbmV3IE1hdGVyaWFsKG5ldyBDb2xvcihuZXcgUkdCQ29sb3IoMTE1LCAxMTUsIDExNSkpLCAwKTtcbiAgICBwcml2YXRlIHR5cGU6IHN0cmluZyA9ICdzdXJmYWNlJztcblxuICAgIGNvbnN0cnVjdG9yIChub3JtYWw6IFZlY3Rvciwgb2Zmc2V0OiBudW1iZXIgPSAwKSB7XG4gICAgICAgIHN1cGVyICgpO1xuXG4gICAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0O1xuICAgICAgICB0aGlzLm5vcm1hbCA9IG5vcm1hbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0SW50ZXJzZWN0RGF0YSAocmF5OiBSYXkpOiBhbnkge1xuICAgICAgICBsZXQgaGl0UG9pbnQ6IFZlY3RvcixcbiAgICAgICAgICAgIG51bWVyYXRvcjogbnVtYmVyLFxuICAgICAgICAgICAgZGVub21pbmF0b3I6IG51bWJlcixcbiAgICAgICAgICAgIGRpc3RhbmNlOiBudW1iZXI7XG5cbiAgICAgICAgbnVtZXJhdG9yID0gLSBWZWN0b3IuZG90KHRoaXMuZ2V0Tm9ybWFsKCksIHJheS5nZXRPcmlnaW4oKSkgKyB0aGlzLm9mZnNldDtcbiAgICAgICAgZGVub21pbmF0b3IgPSBWZWN0b3IuZG90KHRoaXMuZ2V0Tm9ybWFsKCksIHJheS5nZXREaXJlY3Rpb24oKSk7XG5cbiAgICAgICAgaWYgKGRlbm9taW5hdG9yID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZGlzdGFuY2UgPSBudW1lcmF0b3IgLyBkZW5vbWluYXRvcjtcblxuICAgICAgICByYXkuc2V0RGlzdGFuY2UoZGlzdGFuY2UpO1xuICAgICAgICBoaXRQb2ludCA9IHJheS5nZXRIaXRQb2ludCgpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwb2ludDogaGl0UG9pbnQsXG4gICAgICAgICAgICBkaXN0YW5jZVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRNYXRlcmlhbCAoKTogTWF0ZXJpYWwge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXRlcmlhbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Tm9ybWFsICgpOiBWZWN0b3Ige1xuICAgICAgICByZXR1cm4gdGhpcy5ub3JtYWw7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFR5cGUgKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLnR5cGU7XG4gICAgfVxuXG4gICAgcHVibGljIHNldE1hdGVyaWFsIChtYXRlcmlhbDogTWF0ZXJpYWwpOiB0aGlzIHtcbiAgICAgICAgdGhpcy5tYXRlcmlhbCA9IG1hdGVyaWFsO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
