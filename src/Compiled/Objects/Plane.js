var __extends=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},AbstractObject_1=require("./AbstractObject"),Color_1=require("../Color/Color"),Material_1=require("../Material"),RTMath_1=require("../RTMath"),RGBColor_1=require("../Color/RGBColor"),Vector_1=require("../Vector"),Plane=function(t){function e(e,r){t.call(this),this.point=new Vector_1.Vector(0,0,0),this.material=new Material_1.Material(new Color_1.Color(new RGBColor_1.RGBColor(115,115,115)),0),this.type="surface",this.normal=e,r&&(this.point=r)}return __extends(e,t),e.prototype.getIntersectData=function(t){var e,r,o=Vector_1.Vector.dot(Vector_1.Vector.substract(this.point,t.getOrigin()),this.normal)/Vector_1.Vector.dot(t.getDirection(),this.getNormal());if(!(o<=RTMath_1.RTMath.EPSILON))return r=Vector_1.Vector.add(t.getOrigin(),Vector_1.Vector.scaled(t.getDirection(),o)),e=Vector_1.Vector.substract(r,t.getOrigin()).getLength(),{point:r,distance:e}},e.prototype.getMaterial=function(){return this.material},e.prototype.getNormal=function(){return this.normal},e.prototype.getType=function(){return this.type},e.prototype.setMaterial=function(t){return this.material=t,this},e}(AbstractObject_1.AbstractObject);exports.Plane=Plane;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk9iamVjdHMvUGxhbmUuanMiLCJPYmplY3RzL1BsYW5lLnRzIl0sIm5hbWVzIjpbIl9fZXh0ZW5kcyIsInRoaXMiLCJkIiwiYiIsIl9fIiwiY29uc3RydWN0b3IiLCJwIiwiaGFzT3duUHJvcGVydHkiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJBYnN0cmFjdE9iamVjdF8xIiwicmVxdWlyZSIsIkNvbG9yXzEiLCJNYXRlcmlhbF8xIiwiUlRNYXRoXzEiLCJSR0JDb2xvcl8xIiwiVmVjdG9yXzEiLCJQbGFuZSIsIl9zdXBlciIsIlBsYW5lLmNvbnN0cnVjdG9yIiwiUGxhbmUuZ2V0SW50ZXJzZWN0RGF0YSIsIlBsYW5lLmdldE1hdGVyaWFsIiwiUGxhbmUuZ2V0Tm9ybWFsIiwiUGxhbmUuZ2V0VHlwZSIsIlBsYW5lLnNldE1hdGVyaWFsIiwiQWJzdHJhY3RPYmplY3QiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFJQSxXQUFhQyxNQUFRQSxLQUFLRCxXQUFjLFNBQVVFLEVBQUdDLEdBRXJELFFBQVNDLEtBQU9ILEtBQUtJLFlBQWNILEVBRG5DLElBQUssR0FBSUksS0FBS0gsR0FBT0EsRUFBRUksZUFBZUQsS0FBSUosRUFBRUksR0FBS0gsRUFBRUcsR0FFbkRKLEdBQUVNLFVBQWtCLE9BQU5MLEVBQWFNLE9BQU9DLE9BQU9QLElBQU1DLEVBQUdJLFVBQVlMLEVBQUVLLFVBQVcsR0FBSUosS0NIbkZPLGlCQUFBQyxRQUErQixvQkFDL0JDLFFBQUFELFFBQXNCLGtCQUN0QkUsV0FBQUYsUUFBeUIsZUFFekJHLFNBQUFILFFBQXVCLGFBQ3ZCSSxXQUFBSixRQUF5QixxQkFDekJLLFNBQUFMLFFBQXVCLGFBRXZCTSxNQUFBLFNBQUFDLEdBTUlELFFBQUFBLEdBQWFBLEVBQWdCQSxHQUN6QkUsRUFBQUEsS0FBQUEsTUFMSUEsS0FBQUEsTUFBZ0JBLEdBQUlBLFVBQUFBLE9BQU9BLEVBQUdBLEVBQUdBLEdBQ2pDQSxLQUFBQSxTQUFxQkEsR0FBSUEsWUFBQUEsU0FBU0EsR0FBSUEsU0FBQUEsTUFBTUEsR0FBSUEsWUFBQUEsU0FBU0EsSUFBS0EsSUFBS0EsTUFBT0EsR0FDMUVBLEtBQUFBLEtBQWVBLFVBS25CQSxLQUFLQSxPQUFTQSxFQUVWQSxJQUNBQSxLQUFLQSxNQUFRQSxHQTREekJGLE1BeEUyQkEsV0FBQUEsRUFBQUEsR0FnQmhCQSxFQUFBQSxVQUFBQSxpQkFBUEEsU0FBeUJBLEdBQ3JCRyxHQUFJQSxHQUNBQSxFQUNBQSxFQUNBQSxTQUFBQSxPQUFPQSxJQUNIQSxTQUFBQSxPQUFPQSxVQUNIQSxLQUFLQSxNQUNMQSxFQUFJQSxhQUVSQSxLQUFLQSxRQUVUQSxTQUFBQSxPQUFPQSxJQUNIQSxFQUFJQSxlQUNKQSxLQUFLQSxZQUdiQSxNQUFJQSxHQUFLQSxTQUFBQSxPQUFPQSxTQWlCaEJBLE1BYkFBLEdBQVdBLFNBQUFBLE9BQU9BLElBQ2RBLEVBQUlBLFlBQ0pBLFNBQUFBLE9BQU9BLE9BQ0hBLEVBQUlBLGVBQ0pBLElBSVJBLEVBQVdBLFNBQUFBLE9BQU9BLFVBQ2RBLEVBQ0FBLEVBQUlBLGFBQ05BLGFBR0VBLE1BQU9BLEVBQ1BBLFNBQUFBLElBSURILEVBQUFBLFVBQUFBLFlBQVBBLFdBQ0lJLE1BQU9BLE1BQUtBLFVBR1RKLEVBQUFBLFVBQUFBLFVBQVBBLFdBQ0lLLE1BQU9BLE1BQUtBLFFBR1RMLEVBQUFBLFVBQUFBLFFBQVBBLFdBQ0lNLE1BQU9BLE1BQUtBLE1BR1ROLEVBQUFBLFVBQUFBLFlBQVBBLFNBQW9CQSxHQUdoQk8sTUFGQUEsTUFBS0EsU0FBV0EsRUFFVEEsTUFFZlAsR0F4RTJCUCxpQkFBQWUsZUFBZEMsU0FBQVQsTUFBS0EiLCJmaWxlIjoiT2JqZWN0cy9QbGFuZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgZnVuY3Rpb24gKGQsIGIpIHtcbiAgICBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTtcbiAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG59O1xudmFyIEFic3RyYWN0T2JqZWN0XzEgPSByZXF1aXJlKFwiLi9BYnN0cmFjdE9iamVjdFwiKTtcbnZhciBDb2xvcl8xID0gcmVxdWlyZShcIi4uL0NvbG9yL0NvbG9yXCIpO1xudmFyIE1hdGVyaWFsXzEgPSByZXF1aXJlKFwiLi4vTWF0ZXJpYWxcIik7XG52YXIgUlRNYXRoXzEgPSByZXF1aXJlKFwiLi4vUlRNYXRoXCIpO1xudmFyIFJHQkNvbG9yXzEgPSByZXF1aXJlKFwiLi4vQ29sb3IvUkdCQ29sb3JcIik7XG52YXIgVmVjdG9yXzEgPSByZXF1aXJlKFwiLi4vVmVjdG9yXCIpO1xudmFyIFBsYW5lID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUGxhbmUsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUGxhbmUobm9ybWFsLCBwb2ludCkge1xuICAgICAgICBfc3VwZXIuY2FsbCh0aGlzKTtcbiAgICAgICAgdGhpcy5wb2ludCA9IG5ldyBWZWN0b3JfMS5WZWN0b3IoMCwgMCwgMCk7XG4gICAgICAgIHRoaXMubWF0ZXJpYWwgPSBuZXcgTWF0ZXJpYWxfMS5NYXRlcmlhbChuZXcgQ29sb3JfMS5Db2xvcihuZXcgUkdCQ29sb3JfMS5SR0JDb2xvcigxMTUsIDExNSwgMTE1KSksIDApO1xuICAgICAgICB0aGlzLnR5cGUgPSAnc3VyZmFjZSc7XG4gICAgICAgIHRoaXMubm9ybWFsID0gbm9ybWFsO1xuICAgICAgICBpZiAocG9pbnQpIHtcbiAgICAgICAgICAgIHRoaXMucG9pbnQgPSBwb2ludDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBQbGFuZS5wcm90b3R5cGUuZ2V0SW50ZXJzZWN0RGF0YSA9IGZ1bmN0aW9uIChyYXkpIHtcbiAgICAgICAgdmFyIGRpc3RhbmNlLCBoaXRQb2ludCwgdCA9IFZlY3Rvcl8xLlZlY3Rvci5kb3QoVmVjdG9yXzEuVmVjdG9yLnN1YnN0cmFjdCh0aGlzLnBvaW50LCByYXkuZ2V0T3JpZ2luKCkpLCB0aGlzLm5vcm1hbCkgL1xuICAgICAgICAgICAgVmVjdG9yXzEuVmVjdG9yLmRvdChyYXkuZ2V0RGlyZWN0aW9uKCksIHRoaXMuZ2V0Tm9ybWFsKCkpO1xuICAgICAgICBpZiAodCA8PSBSVE1hdGhfMS5SVE1hdGguRVBTSUxPTikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGhpdFBvaW50ID0gVmVjdG9yXzEuVmVjdG9yLmFkZChyYXkuZ2V0T3JpZ2luKCksIFZlY3Rvcl8xLlZlY3Rvci5zY2FsZWQocmF5LmdldERpcmVjdGlvbigpLCB0KSk7XG4gICAgICAgIGRpc3RhbmNlID0gVmVjdG9yXzEuVmVjdG9yLnN1YnN0cmFjdChoaXRQb2ludCwgcmF5LmdldE9yaWdpbigpKS5nZXRMZW5ndGgoKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBvaW50OiBoaXRQb2ludCxcbiAgICAgICAgICAgIGRpc3RhbmNlOiBkaXN0YW5jZVxuICAgICAgICB9O1xuICAgIH07XG4gICAgUGxhbmUucHJvdG90eXBlLmdldE1hdGVyaWFsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXRlcmlhbDtcbiAgICB9O1xuICAgIFBsYW5lLnByb3RvdHlwZS5nZXROb3JtYWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5vcm1hbDtcbiAgICB9O1xuICAgIFBsYW5lLnByb3RvdHlwZS5nZXRUeXBlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50eXBlO1xuICAgIH07XG4gICAgUGxhbmUucHJvdG90eXBlLnNldE1hdGVyaWFsID0gZnVuY3Rpb24gKG1hdGVyaWFsKSB7XG4gICAgICAgIHRoaXMubWF0ZXJpYWwgPSBtYXRlcmlhbDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICByZXR1cm4gUGxhbmU7XG59KShBYnN0cmFjdE9iamVjdF8xLkFic3RyYWN0T2JqZWN0KTtcbmV4cG9ydHMuUGxhbmUgPSBQbGFuZTtcbiIsImltcG9ydCB7IEFic3RyYWN0T2JqZWN0IH0gZnJvbSBcIi4vQWJzdHJhY3RPYmplY3RcIjtcbmltcG9ydCB7IENvbG9yIH0gZnJvbSBcIi4uL0NvbG9yL0NvbG9yXCI7XG5pbXBvcnQgeyBNYXRlcmlhbCB9IGZyb20gXCIuLi9NYXRlcmlhbFwiO1xuaW1wb3J0IHsgUmF5IH0gZnJvbSBcIi4uL1JheVwiO1xuaW1wb3J0IHsgUlRNYXRoIH0gZnJvbSBcIi4uL1JUTWF0aFwiO1xuaW1wb3J0IHsgUkdCQ29sb3IgfSBmcm9tIFwiLi4vQ29sb3IvUkdCQ29sb3JcIjtcbmltcG9ydCB7IFZlY3RvciB9IGZyb20gXCIuLi9WZWN0b3JcIjtcblxuZXhwb3J0IGNsYXNzIFBsYW5lIGV4dGVuZHMgQWJzdHJhY3RPYmplY3Qge1xuICAgIHByaXZhdGUgbm9ybWFsOiBWZWN0b3I7XG4gICAgcHJpdmF0ZSBwb2ludDogVmVjdG9yID0gbmV3IFZlY3RvcigwLCAwLCAwKTtcbiAgICBwcml2YXRlIG1hdGVyaWFsOiBNYXRlcmlhbCA9IG5ldyBNYXRlcmlhbChuZXcgQ29sb3IobmV3IFJHQkNvbG9yKDExNSwgMTE1LCAxMTUpKSwgMCk7XG4gICAgcHJpdmF0ZSB0eXBlOiBzdHJpbmcgPSAnc3VyZmFjZSc7XG5cbiAgICBjb25zdHJ1Y3RvciAobm9ybWFsOiBWZWN0b3IsIHBvaW50PzogVmVjdG9yKSB7XG4gICAgICAgIHN1cGVyICgpO1xuXG4gICAgICAgIHRoaXMubm9ybWFsID0gbm9ybWFsO1xuXG4gICAgICAgIGlmIChwb2ludCkge1xuICAgICAgICAgICAgdGhpcy5wb2ludCA9IHBvaW50O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGdldEludGVyc2VjdERhdGEgKHJheTogUmF5KTogYW55IHtcbiAgICAgICAgbGV0IGRpc3RhbmNlOiBudW1iZXIsXG4gICAgICAgICAgICBoaXRQb2ludDogVmVjdG9yLFxuICAgICAgICAgICAgdDogbnVtYmVyID1cbiAgICAgICAgICAgIFZlY3Rvci5kb3QoXG4gICAgICAgICAgICAgICAgVmVjdG9yLnN1YnN0cmFjdChcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wb2ludCxcbiAgICAgICAgICAgICAgICAgICAgcmF5LmdldE9yaWdpbigpXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICB0aGlzLm5vcm1hbFxuICAgICAgICAgICAgKSAvXG4gICAgICAgICAgICBWZWN0b3IuZG90KFxuICAgICAgICAgICAgICAgIHJheS5nZXREaXJlY3Rpb24oKSxcbiAgICAgICAgICAgICAgICB0aGlzLmdldE5vcm1hbCgpXG4gICAgICAgICAgICApO1xuXG4gICAgICAgIGlmICh0IDw9IFJUTWF0aC5FUFNJTE9OKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBoaXRQb2ludCA9IFZlY3Rvci5hZGQoXG4gICAgICAgICAgICByYXkuZ2V0T3JpZ2luKCksXG4gICAgICAgICAgICBWZWN0b3Iuc2NhbGVkKFxuICAgICAgICAgICAgICAgIHJheS5nZXREaXJlY3Rpb24oKSxcbiAgICAgICAgICAgICAgICB0XG4gICAgICAgICAgICApXG4gICAgICAgICk7XG5cbiAgICAgICAgZGlzdGFuY2UgPSBWZWN0b3Iuc3Vic3RyYWN0KFxuICAgICAgICAgICAgaGl0UG9pbnQsXG4gICAgICAgICAgICByYXkuZ2V0T3JpZ2luKClcbiAgICAgICAgKS5nZXRMZW5ndGgoKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcG9pbnQ6IGhpdFBvaW50LFxuICAgICAgICAgICAgZGlzdGFuY2VcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0TWF0ZXJpYWwgKCk6IE1hdGVyaWFsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWF0ZXJpYWw7XG4gICAgfVxuXG4gICAgcHVibGljIGdldE5vcm1hbCAoKTogVmVjdG9yIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubm9ybWFsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRUeXBlICgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy50eXBlO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRNYXRlcmlhbCAobWF0ZXJpYWw6IE1hdGVyaWFsKTogdGhpcyB7XG4gICAgICAgIHRoaXMubWF0ZXJpYWwgPSBtYXRlcmlhbDtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
