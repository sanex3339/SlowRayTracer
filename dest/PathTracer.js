(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.PathTracer = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Tracer_1=require("./Tracer"),screenWidth=100,screenHeight=100,canvas=document.createElement("canvas"),ctx=canvas.getContext("2d"),image,tracer;canvas.width=screenWidth,canvas.height=screenHeight,document.body.appendChild(canvas),tracer=new Tracer_1.Tracer(ctx,screenWidth,screenHeight),tracer.run(),image=canvas.toDataURL("image/png"),document.write("<img src='"+image+"' />");


},{"./Tracer":2}],2:[function(require,module,exports){
var Tracer=function(){function e(e,t,i){this.buffer=[],this.iteration=0,this.numberOfWorkers=8,this.screenWidth=250,this.screenHeight=250,this.ctx=e,this.screenWidth=t,this.screenHeight=i,this.image=e.getImageData(0,0,this.screenWidth,this.screenHeight),this.imageData=this.image.data;for(var r=0;r<this.screenWidth*this.screenHeight*3;r++)this.buffer.push(0)}return e.prototype.run=function(){for(var e=this,t=0;t<this.numberOfWorkers;t++){var i=new Worker("TracerWorker.js");i.onmessage=function(t){e.iteration++,console.log(e.iteration);for(var i=t.data,r=0;r<i.length;r++)e.buffer[r]+=i[r];for(var a=0,s=0;a<e.screenWidth*e.screenHeight*4;)e.imageData[a++]=255*e.buffer[s++]/e.iteration,e.imageData[a++]=255*e.buffer[s++]/e.iteration,e.imageData[a++]=255*e.buffer[s++]/e.iteration,e.imageData[a++]=255;e.image.data=e.imageData,e.ctx.putImageData(e.image,0,0)},i.postMessage([this.screenWidth,this.screenHeight])}},e}();exports.Tracer=Tracer;


},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Vzci9saWIvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9zb3VyY2UvUGF0aFRyYWNlci50cyIsIi9zb3VyY2UvVHJhY2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsR0FBQSxVQUFBLFFBQXVCLFlBRWpCLFlBQWMsSUFDaEIsYUFBZSxJQUVmLE9BQTRCLFNBQVMsY0FBYyxVQUNuRCxJQUFnQyxPQUFPLFdBQVcsTUFDbEQsTUFDQSxNQUVKLFFBQU8sTUFBUSxZQUNmLE9BQU8sT0FBUyxhQUNoQixTQUFTLEtBQUssWUFBWSxRQUUxQixPQUFTLEdBQUksVUFBQSxPQUFPLElBQUssWUFBYSxjQUN0QyxPQUFPLE1BRVAsTUFBUSxPQUFPLFVBQVUsYUFDekIsU0FBUyxNQUFNLGFBQWMsTUFBSzs7OztBQ2xCbEMsR0FBQSxRQUFBLFdBVUksUUFBQSxHQUFhLEVBQStCLEVBQXNCLEdBVGxFLEtBQUEsVUFJQSxLQUFBLFVBQW9CLEVBQ3BCLEtBQUEsZ0JBQWtCLEVBQ2xCLEtBQUEsWUFBc0IsSUFDdEIsS0FBQSxhQUF1QixJQUduQixLQUFLLElBQU0sRUFDWCxLQUFLLFlBQWMsRUFDbkIsS0FBSyxhQUFlLEVBRXBCLEtBQUssTUFBUSxFQUFJLGFBQWEsRUFBRyxFQUFHLEtBQUssWUFBYSxLQUFLLGNBQzNELEtBQUssVUFBWSxLQUFLLE1BQVksSUFFbEMsS0FBSyxHQUFJLEdBQUksRUFBRyxFQUFJLEtBQUssWUFBYyxLQUFLLGFBQWUsRUFBRyxJQUMxRCxLQUFLLE9BQU8sS0FBSyxHQWtDN0IsTUE5QlcsR0FBQSxVQUFBLElBQVAsV0FDSSxJQUFLLEdBRFQsR0FBQSxLQUNhLEVBQUksRUFBRyxFQUFJLEtBQUssZ0JBQWlCLElBQUssQ0FDM0MsR0FBSSxHQUFTLEdBQUksUUFBTyxrQkFFeEIsR0FBTyxVQUFZLFNBQUMsR0FDaEIsRUFBSyxZQUVMLFFBQVEsSUFBSSxFQUFLLFVBSWpCLEtBQUssR0FGRCxHQUFPLEVBQVEsS0FFVixFQUFJLEVBQUcsRUFBSSxFQUFLLE9BQVEsSUFDN0IsRUFBSyxPQUFPLElBQU0sRUFBSyxFQUczQixLQUFJLEdBQUksR0FBSSxFQUFHLEVBQUksRUFBRyxFQUFJLEVBQUssWUFBYyxFQUFLLGFBQWUsR0FDN0QsRUFBSyxVQUFVLEtBQTBCLElBQW5CLEVBQUssT0FBTyxLQUFhLEVBQUssVUFDcEQsRUFBSyxVQUFVLEtBQTBCLElBQW5CLEVBQUssT0FBTyxLQUFhLEVBQUssVUFDcEQsRUFBSyxVQUFVLEtBQTBCLElBQW5CLEVBQUssT0FBTyxLQUFhLEVBQUssVUFDcEQsRUFBSyxVQUFVLEtBQU8sR0FHMUIsR0FBSyxNQUFZLEtBQUksRUFBSyxVQUUxQixFQUFLLElBQUksYUFBYSxFQUFLLE1BQU8sRUFBRyxJQUd6QyxFQUFPLGFBQWEsS0FBSyxZQUFhLEtBQUssaUJBR3ZELElBckRhLFNBQUEsT0FBTSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJpbXBvcnQgeyBUcmFjZXIgfSBmcm9tIFwiLi9UcmFjZXJcIjtcblxuY29uc3Qgc2NyZWVuV2lkdGggPSAxMDAsXG4gICAgc2NyZWVuSGVpZ2h0ID0gMTAwO1xuXG5sZXQgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIiksXG4gICAgY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQgPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKSxcbiAgICBpbWFnZTogYW55LFxuICAgIHRyYWNlcjogVHJhY2VyO1xuXG5jYW52YXMud2lkdGggPSBzY3JlZW5XaWR0aDtcbmNhbnZhcy5oZWlnaHQgPSBzY3JlZW5IZWlnaHQ7XG5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7XG5cbnRyYWNlciA9IG5ldyBUcmFjZXIoY3R4LCBzY3JlZW5XaWR0aCwgc2NyZWVuSGVpZ2h0KTtcbnRyYWNlci5ydW4oKTtcblxuaW1hZ2UgPSBjYW52YXMudG9EYXRhVVJMKFwiaW1hZ2UvcG5nXCIpO1xuZG9jdW1lbnQud3JpdGUoYDxpbWcgc3JjPVxcJyR7aW1hZ2V9XFwnIC8+YCk7XG4iLCJleHBvcnQgY2xhc3MgVHJhY2VyIHtcbiAgICBidWZmZXI6IG51bWJlcltdID0gW107XG4gICAgY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7XG4gICAgaW1hZ2U6IGFueTtcbiAgICBpbWFnZURhdGE6IG51bWJlcltdO1xuICAgIGl0ZXJhdGlvbjogbnVtYmVyID0gMDtcbiAgICBudW1iZXJPZldvcmtlcnMgPSA4O1xuICAgIHNjcmVlbldpZHRoOiBudW1iZXIgPSAyNTA7XG4gICAgc2NyZWVuSGVpZ2h0OiBudW1iZXIgPSAyNTA7XG5cbiAgICBjb25zdHJ1Y3RvciAoY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsIHNjcmVlbldpZHRoPzogbnVtYmVyLCBzY3JlZW5IZWlnaHQ/OiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5jdHggPSBjdHg7XG4gICAgICAgIHRoaXMuc2NyZWVuV2lkdGggPSBzY3JlZW5XaWR0aDtcbiAgICAgICAgdGhpcy5zY3JlZW5IZWlnaHQgPSBzY3JlZW5IZWlnaHQ7XG5cbiAgICAgICAgdGhpcy5pbWFnZSA9IGN0eC5nZXRJbWFnZURhdGEoMCwgMCwgdGhpcy5zY3JlZW5XaWR0aCwgdGhpcy5zY3JlZW5IZWlnaHQpO1xuICAgICAgICB0aGlzLmltYWdlRGF0YSA9IHRoaXMuaW1hZ2VbJ2RhdGEnXTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2NyZWVuV2lkdGggKiB0aGlzLnNjcmVlbkhlaWdodCAqIDM7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5idWZmZXIucHVzaCgwKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBydW4gKCk6IHZvaWQge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubnVtYmVyT2ZXb3JrZXJzOyBpKyspIHtcbiAgICAgICAgICAgIGxldCB3b3JrZXIgPSBuZXcgV29ya2VyKCdUcmFjZXJXb3JrZXIuanMnKTtcblxuICAgICAgICAgICAgd29ya2VyLm9ubWVzc2FnZSA9IChtZXNzYWdlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5pdGVyYXRpb24rKztcblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuaXRlcmF0aW9uKTtcblxuICAgICAgICAgICAgICAgIGxldCBkYXRhID0gbWVzc2FnZS5kYXRhO1xuXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBkYXRhLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnVmZmVyW2pdICs9IGRhdGFbal07XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZm9yKHZhciBrID0gMCwgaiA9IDA7IGsgPCB0aGlzLnNjcmVlbldpZHRoICogdGhpcy5zY3JlZW5IZWlnaHQgKiA0Oykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmltYWdlRGF0YVtrKytdID0gdGhpcy5idWZmZXJbaisrXSAqIDI1NSAvIHRoaXMuaXRlcmF0aW9uO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmltYWdlRGF0YVtrKytdID0gdGhpcy5idWZmZXJbaisrXSAqIDI1NSAvIHRoaXMuaXRlcmF0aW9uO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmltYWdlRGF0YVtrKytdID0gdGhpcy5idWZmZXJbaisrXSAqIDI1NSAvIHRoaXMuaXRlcmF0aW9uO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmltYWdlRGF0YVtrKytdID0gMjU1O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VbJ2RhdGEnXSA9IHRoaXMuaW1hZ2VEYXRhO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5jdHgucHV0SW1hZ2VEYXRhKHRoaXMuaW1hZ2UsIDAsIDApO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKFt0aGlzLnNjcmVlbldpZHRoLCB0aGlzLnNjcmVlbkhlaWdodF0pO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19
