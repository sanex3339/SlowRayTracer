(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.PathTracer = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Tracer_1=require("./Tracer"),screenWidth=10,screenHeight=10,canvas=document.createElement("canvas"),ctx=canvas.getContext("2d"),image,tracer;canvas.width=screenWidth,canvas.height=screenHeight,document.body.appendChild(canvas),tracer=new Tracer_1.Tracer(ctx,screenWidth,screenHeight),tracer.run(),image=canvas.toDataURL("image/png"),document.write("<img src='"+image+"' />");


},{"./Tracer":2}],2:[function(require,module,exports){
var Tracer=function(){function e(e,t,r){this.currentX=0,this.currentY=0,this.emptyWorkers=[],this.numberOfWorkers=16,this.screenWidth=250,this.screenHeight=250,this.ctx=e,this.screenWidth=t,this.screenHeight=r,this.screenWidth<this.numberOfWorkers&&(this.numberOfWorkers=this.screenWidth-2),this.image=e.getImageData(0,0,t,r),this.imageData=this.image.data;for(var i=0;i<this.numberOfWorkers;i++)this.emptyWorkers.push(new Worker("TracerWorker.js"))}return e.prototype.createWorker=function(e,t,r){var i=this;e.onmessage=function(t){var r=t.data;"string"==typeof r&&(r=JSON.parse(r)),i.imageData[r[1]*i.screenWidth*4+4*r[0]]=r[2],i.imageData[r[1]*i.screenWidth*4+(4*r[0]+1)]=r[3],i.imageData[r[1]*i.screenWidth*4+(4*r[0]+2)]=r[4],i.imageData[r[1]*i.screenWidth*4+(4*r[0]+3)]=255,i.emptyWorkers.push(e),i.pixelManager(i.currentX,i.currentY)},e.postMessage([this.screenWidth,this.screenHeight,t,r])},e.prototype.pixelManager=function(e,t,r){r&&(this.doneCallback=r);for(var i=0,s=this.emptyWorkers.length;s>i;i++,e++){var a=this.emptyWorkers.shift();if(e===this.screenWidth-1&&t===this.screenHeight-1)return this.doneCallback?this.doneCallback():!1;console.log(t,e),this.createWorker(a,e,t),e===this.screenWidth-1?(this.currentX=0,this.currentY++,this.image.data=this.imageData,this.ctx.putImageData(this.image,0,0)):this.currentX++}},e.prototype.run=function(){var e=this;this.startTime=new Date,this.pixelManager(this.currentX,this.currentY,function(){e.doneCallback=null,e.image.data=e.imageData,e.ctx.putImageData(e.image,0,0),e.endTime=new Date,console.log((e.endTime-e.startTime)/1e3+" секунд")})},e}();exports.Tracer=Tracer;


},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
